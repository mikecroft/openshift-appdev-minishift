apiVersion: v1
kind: List
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: parksmap
    name: parksmap
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap
      deploymentconfig: parksmap    
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: parksmap
          deploymentconfig: parksmap
      spec:
        containers:
          - image: '172.30.1.1:5000/f704-parks-dev/parksmap:0.0-0'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: parksmap
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - configMap:
              defaultMode: 420
              name: parksmap-config
            name: parksmap-mount
- apiVersion: v1
  data:
    APPNAME: "ParksMap"
  kind: ConfigMap
  metadata:
    name: parksmap-config
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: parksmap
    name: parksmap
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: parksmap
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: parksmap
    name: parksmap
  spec:
    ports:
      - port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: parksmap
      deploymentconfig: parksmap
    sessionAffinity: None
    type: ClusterIP
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: parksmap
    name: parksmap
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'parksmap:latest'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'redhat-openjdk18-openshift:1.2'
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5